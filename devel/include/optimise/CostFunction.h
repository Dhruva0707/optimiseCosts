// Generated by gencpp from file optimise/CostFunction.msg
// DO NOT EDIT!


#ifndef OPTIMISE_MESSAGE_COSTFUNCTION_H
#define OPTIMISE_MESSAGE_COSTFUNCTION_H

#include <ros/service_traits.h>


#include <optimise/CostFunctionRequest.h>
#include <optimise/CostFunctionResponse.h>


namespace optimise
{

struct CostFunction
{

typedef CostFunctionRequest Request;
typedef CostFunctionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CostFunction
} // namespace optimise


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::optimise::CostFunction > {
  static const char* value()
  {
    return "3f4f5634292139671f479e48c91f474f";
  }

  static const char* value(const ::optimise::CostFunction&) { return value(); }
};

template<>
struct DataType< ::optimise::CostFunction > {
  static const char* value()
  {
    return "optimise/CostFunction";
  }

  static const char* value(const ::optimise::CostFunction&) { return value(); }
};


// service_traits::MD5Sum< ::optimise::CostFunctionRequest> should match 
// service_traits::MD5Sum< ::optimise::CostFunction > 
template<>
struct MD5Sum< ::optimise::CostFunctionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::optimise::CostFunction >::value();
  }
  static const char* value(const ::optimise::CostFunctionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::optimise::CostFunctionRequest> should match 
// service_traits::DataType< ::optimise::CostFunction > 
template<>
struct DataType< ::optimise::CostFunctionRequest>
{
  static const char* value()
  {
    return DataType< ::optimise::CostFunction >::value();
  }
  static const char* value(const ::optimise::CostFunctionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::optimise::CostFunctionResponse> should match 
// service_traits::MD5Sum< ::optimise::CostFunction > 
template<>
struct MD5Sum< ::optimise::CostFunctionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::optimise::CostFunction >::value();
  }
  static const char* value(const ::optimise::CostFunctionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::optimise::CostFunctionResponse> should match 
// service_traits::DataType< ::optimise::CostFunction > 
template<>
struct DataType< ::optimise::CostFunctionResponse>
{
  static const char* value()
  {
    return DataType< ::optimise::CostFunction >::value();
  }
  static const char* value(const ::optimise::CostFunctionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OPTIMISE_MESSAGE_COSTFUNCTION_H
